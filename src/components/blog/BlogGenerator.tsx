'use client';

import { useActionState } from 'react';
import { useFormStatus } from 'react-dom';
import { createBlogPostAction, type FormState } from '@/app/blog/actions';
import { useEffect } from 'react';
import { useToast } from '@/hooks/use-toast';

import { Button } from '@/components/ui/button';
import { Textarea } from '@/components/ui/textarea';
import { Card, CardContent, CardFooter, CardHeader } from '@/components/ui/card';
import { Label } from '@/components/ui/label';
import { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';
import { Bot, Loader2 } from 'lucide-react';

const initialState: FormState = {
  status: 'idle',
  message: '',
};

function SubmitButton() {
  const { pending } = useFormStatus();
  return (
    <Button type="submit" disabled={pending} className="w-full md:w-auto">
      {pending && <Loader2 className="mr-2 h-4 w-4 animate-spin" />}
      {pending ? 'Generating...' : 'Generate Post'}
    </Button>
  );
}

export function BlogGenerator() {
  const [state, formAction] = useActionState(createBlogPostAction, initialState);
  const { toast } = useToast();

  useEffect(() => {
    if (state?.status === 'error' && state.message) {
      toast({
        variant: 'destructive',
        title: 'Error',
        description: state.message,
      });
    }
  }, [state, toast]);

  return (
    <div className="space-y-8">
      <form action={formAction}>
        <Card>
          <CardContent className="p-6 space-y-4">
            <div className="space-y-2">
              <Label htmlFor="topic" className="text-lg font-medium">Blog Topic</Label>
              <Textarea
                id="topic"
                name="topic"
                placeholder="e.g., 'The Future of Sustainable Architecture' or 'Top 5 Innovations in Civil Engineering'"
                required
                minLength={10}
                rows={3}
                className="text-base"
              />
              {state?.status === 'error' && state.issues && (
                <p className="text-sm font-medium text-destructive">{state.issues.join(', ')}</p>
              )}
            </div>
          </CardContent>
          <CardFooter className="bg-secondary/50 p-6">
            <SubmitButton />
          </CardFooter>
        </Card>
      </form>

      {state?.status === 'success' && state.data && (
        <Card className="animate-in fade-in-50">
          <CardHeader>
            <Alert>
              <Bot className="h-4 w-4" />
              <AlertTitle className="font-bold text-primary">Generated Content</AlertTitle>
              <AlertDescription>
                Here is the draft generated by our AI. Please review and edit it carefully.
              </AlertDescription>
            </Alert>
          </CardHeader>
          <CardContent className="space-y-6">
            <h2 className="font-headline text-3xl font-bold border-b pb-4">{state.data.title}</h2>
            <div className="space-y-4 text-base text-foreground/90 leading-relaxed">
              {state.data.content.split('\n').filter(p => p.trim() !== '').map((paragraph, i) => (
                <p key={i}>{paragraph}</p>
              ))}
            </div>
          </CardContent>
        </Card>
      )}
    </div>
  );
}
